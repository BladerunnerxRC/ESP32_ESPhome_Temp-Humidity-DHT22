# ESPhome configuration for the ENVIRO-B2 ESP32 board.
#
# works on INFO ESPHome 2025.7.2 FW for HW
# GPIO Pin usage:
#   GPIO2  - Onboard status LED
#   GPIO26 - DHT22 data pin

substitutions:
  # Calibration offsets applied to the DHT22 readings
  temperature_calibration: "0.0"
  humidity_calibration: "0.0"
  # Measurement intervals
  update_interval_s: "30s"
  update_interval_wifi: "60s"

esphome:
  name: "enviro-b2"
  friendly_name: ENVIRO-B2

esp32:
  board: esp32dev
  framework:
    type: arduino
    version: recommended # Options: recommended, dev, or latest

# Enable detailed logging. UART output is disabled because the serial port
# is not used in normal operation.
logger:
  level: DEBUG # Options: ERROR, WARN, INFO, DEBUG, VERY_VERBOSE
  baud_rate: 0

# Enable the Home Assistant API with encrypted communication
api:
  encryption:
    key: !secret enviro_b2_api_key

# Over-the-air update credentials
ota:
  - platform: esphome
    password: !secret enviro_b2_ota_pwd

# Use Home Assistant as the time source
time:
  - platform: homeassistant
    id: ha_time

wifi:
  # Wi-Fi credentials
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  output_power: 15.5dB
  # Static network configuration
  manual_ip:
    static_ip: 10.100.50.77
    gateway: 10.100.50.1
    subnet: 255.255.255.0
    dns1: 8.8.8.8
    dns2: 8.8.4.4
  # Turn on the LED when connected and restart the board if the connection is lost.
  # This will also create a persistent notification in Home Assistant.
  # If the connection is lost for more than 30 seconds, the device will restart.
  on_connect:
    then:
      - switch.turn_on: onboard_led
      - logger.log: "WiFi connected"
      - homeassistant.service:
          service: persistent_notification.create
          data:
            title: "ENVIRO-B2"
            message: "WiFi connection established"
  on_disconnect:
    then:
      - switch.turn_off: onboard_led
      - logger.log: "WiFi disconnected. Waiting 30 seconds before deciding to restart."
      - delay: 30s
      - if:
          condition:
            lambda: 'return !WiFi.isConnected();'
          then:
            - logger.log: "WiFi still disconnected after delay. Restarting now."
            - lambda: |-
                ESP.restart();
  # Fallback access point settings
  ap:
    ssid: !secret enviro_b2_ap_sid
    password: !secret enviro_b2_ap_pwd

# captive_portal:

sensor:
  # Report Wi-Fi signal strength
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: ${update_interval_wifi}
    device_class: signal_strength

  # Temperature and humidity from a DHT22 sensor
  - platform: dht
    pin: GPIO26
    temperature:
      name: "DHT22_Temperature"
      device_class: temperature
      state_class: measurement
      unit_of_measurement: "Â°C"
      id: temp
      filters:
        - lambda: return x + ${temperature_calibration};
    humidity:
      name: "DHT22_Humidity"
      device_class: humidity
      state_class: measurement
      unit_of_measurement: "%"
      id: humidity
      filters:
        - lambda: return x + ${humidity_calibration};
    update_interval: ${update_interval_s}

  # How long the device has been running
  - platform: uptime
    id: enviro_b2_uptime_sensor
    name: "ENVIRO-B2 Uptime"

binary_sensor:
  # Show if the device is online
  - platform: status
    name: "Connection Status"
    id: connection_status
    entity_category: diagnostic

  # Trigger a reboot from Home Assistant when the input_boolean is toggled
  - platform: homeassistant
    name: "Reboot ENVIRO-B2 Trigger"
    entity_id: input_boolean.reboot_enviro_b2
    id: reboot_trigger
    on_press:
      - if:
          condition:
            lambda: 'return id(enviro_b2_uptime_sensor).state > 60;'
          then:
            - logger.log: "Manual reboot requested via Home Assistant (passes debounce)"
            # Feedback blink removed for simplicity
            - homeassistant.service:
                service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.reboot_enviro_b2
            - logger.log: "Device rebooting now"
            - switch.turn_on: reboot_enviro_b2_restart
          else:
            - logger.log: "Debounce blocked reboot: uptime too short"
            - homeassistant.service:
                service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.reboot_enviro_b2

# Define the onboard LED
switch:
  # Controls the onboard LED connected to GPIO2
  - platform: gpio
    name: "Wifi Connect LED Switch"
    pin: 2
    id: onboard_led
    inverted: false # Adjust if LED logic is inverted

  # Exposes a restart switch
  - platform: restart
    name: "Reboot_ENVIRO-B2"
    id: reboot_enviro_b2_restart
